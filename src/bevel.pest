WHITESPACE = _{ " " | "\t" }

COMMENT = _{ "%" ~ (!nl ~ ANY)* ~ nl }

alpha = { 'a'..'z' | 'A'..'Z' }

nl = _{ "\n"+ }

ident = @{ alpha ~ (alpha | ASCII_DIGIT)* }

atom = @{ "'" ~ ident }

num_literal = @{ int ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ int)? }
	int = { ("+" | "-")? ~ ASCII_DIGIT+ }

num_operation = _{ add | subtract | multiply | divide }
	add = { "+" }
	subtract = { "-" }
	multiply = { "*" }
	divide = { "/" }

num_compare = _{gt | lt | leq | geq | eq}
	gt = { ">" }
	lt = { "<" }
	leq = { "<=" }
	geq = { ">=" }
	eq = { "==" }

relation_call = { ident ~ "(" ~ arg_list ~ ")" }

relation_decl = { ident ~ "(" ~ param_list ~ ")" }
	param_list = { (const_term ~ ("," ~ const_term)*)? }
	const_term = { num_literal | ident | atom }

arg_list = { (expr ~ ("," ~ expr)*)? }

expr_bin = { expr ~ num_compare ~ expr }
expr = { term ~ (num_operation ~ term)* }
term = _{ num_literal | atom | ("(" ~ expr ~ ")") | relation_call | ident }

simple_relation = { relation_decl ~ "~" ~ const_term }

multiple_relation = { relation_decl ~ "~" ~ "(" ~ param_list ~ ")" }

statement = _{ assignment | mul_assignment | relate | mul_relate | expr_bin }
	assignment = { const_term ~ "~" ~ expr }
	mul_assignment = { "(" ~ param_list ~ ")" ~ "~" ~ expr }
	relate = { "relate" ~ expr }
	mul_relate = { "relate" ~ mul_expr }
	mul_expr = { (( "(" ~ expr ~ ("," ~ expr)*) ~ ")" ) | ( expr ~ ("," ~ expr)* ) }

relation_block = { 
	relation_decl ~ nl? ~ block
}

block = {
	"{" ~
	(nl ~ statement)+ ~ nl? ~
	"}"
}

program = _{ SOI ~ nl? ~ ((simple_relation | relation_block | multiple_relation) ~ ";" ~ nl)+ ~ EOI}
